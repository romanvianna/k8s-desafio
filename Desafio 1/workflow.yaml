name: CI-CD DEVELOP
on:
  push:
    branches: [develop]
    paths-ignore:
      - '.github/**'
jobs:
  get-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - name: Bump version and push tag
        id: tagging
        uses: mathieudutour/github-tag-action@v6.1
        with:
          fetch_all_tags: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Echo Tag
        id: tag
        run: echo "new_tag=${{ steps.tagging.outputs.new_tag }}" >> $GITHUB_OUTPUT
  build-front:
    runs-on: ubuntu-latest
    needs: get-tag
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: 'homolog'
          filters: |
            front:
              - 'frontend/**'
      - name: Set node version '18'
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: QEMU
         uses: docker/setup-qemu-action@v1
      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN}}
          password: ${{ secrets.DOCKER_HUB_BRITA}}
      - name: Build Front
        if: steps.changes.outputs.front == 'true'      
        run: |
          cd frontend/
          yarn
          cd packages/web/apps/WebApp
          yarn pub:hml
          docker tag -frontend-hml dockerhub/front:${{ needs.get-tag.outputs.tag }}         
          docker push dockerhub/front:${{ needs.get-tag.outputs.tag }}    
  build-services:
    runs-on: ubuntu-latest
    needs: get-tag
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: 'homolog'
          filters: |
            services:
              - 'backend/packages/services-svc/**'

      - name: Set node version '16'
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: QEMU
        uses: docker/setup-qemu-action@v1

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN}}
          password: ${{ secrets.DOCKER_HUB_BRITA}}

      - name: Build services
        if: steps.changes.outputs.services == 'true'
        run: |
          cd backend/
          mkdir packages/services-svc/files
          npm run start:svc
          docker tag -api-services dockerhub/services:${{ needs.get-tag.outputs.tag }}
          docker push dockerhub/services:${{ needs.get-tag.outputs.tag }}

  edit_tag:
    runs-on: ubuntu-latest
    if: |
      always() && 
      (needs.build-front.result == 'success' || needs.build-front.result == 'skipped') && 
      (needs.build-services.result == 'success' || needs.build-services.result == 'skipped')
    needs: [build-front,build-services,get-tag]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: 'homolog'
          filters: |
            front:
              - 'frontend/**'
            services:
              - 'backend/packages/services-svc/**'
      - name: Checkout kubernetes repo
        uses: actions/checkout@master
        with:
          repository: roman/kubernetes
          token: ${{ secrets.SECRET_ACTIONS}}
          ref: main

      - name: Install Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize_version: v3.6.1

      - name: k8s tag Front
        if: steps.changes.outputs.front == 'true' 
        run: |
          cd projetox/dev
          kustomize edit set image dockerhub/front=dockerhub/front:${{ needs.get-tag.outputs.tag }}
          git config --global user.email "romanvianna@outlook.com.br"
          git config --global user.name "romanrsvianna"
          git commit -am "att new tag"
          git push

      - name: k8s tag services
        if: steps.changes.outputs.services == 'true'   
        run: |
          cd projetox/dev
          kustomize edit set image dockerhub/services=dockerhub/services:${{ needs.get-tag.outputs.tag }}
          git config --global user.email "romanvianna@outlook.com.br"
          git config --global user.name "romanrsvianna"
          git commit -am "att new tag"
          git push
